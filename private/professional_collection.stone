namespace professional_collection

#
# Private endpoints for professional sharing.
# For now, we just expose an endpoint to list all the professional collections
# created by an user.
#

struct SelectedFileInfo
    ns_id UInt64
    fq_path String

union ProfessionalCollectionError
    unauthorized_namespace String
        "Trying to access a namespace that you don't have access to."
    invalid_path String
        "Selected file represents an invalid path."
    collections_disabled String
        "User does not have access to Professional Collections."
    paper_disabled String
        "User cannot use Dropbox Paper."
    graphql_unexpected_response String
        "GraphQL query returned unexpected response."
    paper_not_reachable String
        "Failed to connect to Paper via RPC."
    paper_doc_not_found String
        "Professional Collection document not found."
    paper_query_failed String
        "Paper failed to execute the Professional Collections query."
    paper_insufficient_permissions String
        "User does not have the Paper privileges required to perform the operation on the collection."
    paper_unknown_error String
        "Unknown error raised by Paper."
    unknown_error String
        "Unknown error on metaserver raised."

struct CreateProfessionalCollectionArg
    selected_files List(SelectedFileInfo)

struct CreateProfessionalCollectionResult
    collection_id String
    collection_url String

    example result
        "A successful collection creation result."
        collection_id = "abcde123455"
        collection_url = "/collection/Untitled-abcde123455"

alias CreateProfessionalCollectionError = ProfessionalCollectionError

struct AppendToProfessionalCollectionArg
    selected_files List(SelectedFileInfo)
    collection_id String

struct AppendToProfessionalCollectionResult
    collection_url String

    example result
        "A successful collection append result."
        collection_url = "/collection/Untitled-abcde123456"

alias AppendToProfessionalCollectionError = ProfessionalCollectionError

struct CollectionUser
    id String
    email String
    name String
    pic String?

    example user
        id = "d.aX86Va0bCNNJDjPP9iZ9Trnq6oLRfbG9N5hq9jbxhhtbPEaDr4"
        email = "sai@example.com"
        name = "Sai Teja"
        pic = "https://link to profile pic"

    example invitee
        id = "d.4ABl57KypBfr2lWwYnuj9w1Wx7YSW3CDqmn5pAub6bO3q80Un"
        email = "henry@example.com"
        name = "Henry Liu"
        pic = "https://link to profile pic"

struct CollectionMetadata
    collection_id String
    collection_url String
    creator CollectionUser
    title String
    invitees List(CollectionUser)?
    thumbnail_urls List(String)?
    items_count UInt32
    created_date String
    last_edited_date String

    example collection
        collection_id = "wLvyImNlD3Cw4eNv3eUJs"
        collection_url = "/collection/Untitled-wLvyImNlD3Cw4eNv3eUJs"
        creator = user
        title = "Untitled"
        invitees = [invitee]
        thumbnail_urls = ["https://link-to-thumbnail-url"]
        items_count = 10
        created_date = "Mon, 03 Jul 2017 15:27:19 GMT"
        last_edited_date = "Mon, 03 Jul 2017 15:28:20 GMT"

struct ListCollectionsArg
    limit UInt32?

struct ListCollectionsResult
    prof_collections List(CollectionMetadata)
    has_used_prof_collections Boolean

alias ListCollectionsError = ProfessionalCollectionError

route create(CreateProfessionalCollectionArg, CreateProfessionalCollectionResult, CreateProfessionalCollectionError)
    attrs
        api_group = "premium-labs"
        is_preview = true
        owner = "premium-labs"

route list(ListCollectionsArg, ListCollectionsResult, ListCollectionsError)
    attrs
        api_group = "premium-labs"
        is_preview = true
        owner = "premium-labs"

route append(AppendToProfessionalCollectionArg, AppendToProfessionalCollectionResult, AppendToProfessionalCollectionError)
    attrs
        api_group = "premium-labs"
        is_preview = true
        owner = "premium-labs"

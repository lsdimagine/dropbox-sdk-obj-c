namespace team

union_closed DevicesLimit
    limited UInt64
        "A specific number of devices."
    unlimited
        "No limit."

    example default
        limited = 1

union_closed RolloutMethod
    unlink_all
        "Unlink all."
    unlink_most_inactive
        "Unlink devices with the most inactivity."
    add_member_to_exceptions
        "Add member to Exceptions."

struct SettingsDeviceManagement
    is_enabled Boolean?
        "Is Device Management feature enabled."
    desktop_devices_limit DevicesLimit?
        "Desktop devices limit."
    mobile_devices_limit DevicesLimit?
        "Mobile devices limit."
    can_user_remove_device Boolean?
        "Can user remove a device."
    rollout_method RolloutMethod?
        "Rollout method."

    example default
        is_enabled = true
        desktop_devices_limit = default
        mobile_devices_limit = default
        can_user_remove_device = false
        rollout_method = unlink_all

struct ConfigureSettingsDeviceManagementResult extends SettingsDeviceManagement
    num_of_excluded_users UInt64?
        "Num of excluded users."

    example default
        num_of_excluded_users = 1

alias ConfigureSettingsDeviceManagementArg = SettingsDeviceManagement

union DeviceManagementError
    "Error returned by device management routes."

    invalid_input
        "Set settings invalid input."

route device_management/configure_settings(ConfigureSettingsDeviceManagementArg, ConfigureSettingsDeviceManagementResult, DeviceManagementError)
    "Configure device management admin's settings.

    Permission : Team member management"

    attrs
        auth="team"
        owner="adminx"

struct ExcludedUser
    display_name String
        "User display name."
    email String
        "User email."
    photo_circle_url String?
        "User circle photo."

    example default
        display_name = "Harry Potter"
        email = "harry@potter.com"
        photo_circle_url = "harry.jpg"

struct GetExcludedUsersResult
    users List(ExcludedUser)
        "List of excluded users."

    example default
        users=[default]

route device_management/get_excluded_users(Void, GetExcludedUsersResult, DeviceManagementError)
    "Get list of excluded users.

    Permission : Team member management"

    attrs
        auth="team"
        owner="adminx"

struct UpdateExcludedUsersArg
    users_to_add List(String)
        "List of users email to add to the excluded list."
    users_to_remove List(String)
        "List of users email to remove to the excluded list."

    example default
        users_to_add = ["harry@potter.com"]
        users_to_remove = []

route device_management/update_excluded_users(UpdateExcludedUsersArg, GetExcludedUsersResult, DeviceManagementError)
    "update excluded users by adding or removing users.

    Permission : Team member management"

    attrs
        auth="team"
        owner="adminx"

struct RemoveDeviceArg
    user_id UInt64
        "User id."
    device_id String
        "Device id."

    example default
        user_id = 5
        device_id = "9101E205-67E0-416C-BB44-2483F1B06D46"

union RemoveDeviceMessage
    "Message type return from remove device route."

    success
        "Remove user device success."
    not_found_user_device
        "Couldn't found user device."

struct RemoveDeviceResult
    message RemoveDeviceMessage
        "Remove device message."

    example default
        message = success

route device_management/remove_device(RemoveDeviceArg, RemoveDeviceResult, DeviceManagementError)
    "Remove user's device.

    Permission : Team member management"

    attrs
        auth="team"
        owner="adminx"

struct RemoveClientArg
    user_id UInt64
        "User id."
    device_id String
        "Device id."
    client_unique_identifier String
        "Client unique identifier."

    example default
        user_id = 5
        device_id = "9101E205-67E0-416C-BB44-2483F1B06D46"
        client_unique_identifier = "dbmsid:AAF1LLeKamhKG9HkwfD_Q8WF0tYRW-Ptuh9bW8IEv48b6hlK3xit1L39Lta-HiL5CkRiYNMUjvd7ZDbxUMJkzRut"

union RemoveClientMessage
    "Message type return from remove client route."

    success
        "Remove user client success."
    not_found_user_client
        "Couldn't found user client."

struct RemoveClientResult
    message RemoveClientMessage
        "Remove client message."

    example default
        message = success

route device_management/remove_client(RemoveClientArg, RemoveClientResult, DeviceManagementError)
    "Remove user's device client.

    Permission : Team member management"

    attrs
        auth="team"
        owner="adminx"

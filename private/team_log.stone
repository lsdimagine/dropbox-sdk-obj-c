namespace team

import async
import team_common
import users

alias AppId = String

###############################
# Routes declarations
###############################

struct GetTeamEventsArg
    limit UInt32(min_value=1, max_value=1000) = 1000
        "Number of results to return per call."
    user UserSelectorArg?
        "Filter the events by user."
    date DateRange?
        "Filter by time range."
    category EventCategory?
        "Filter the returned events to a single category."
    event_type EventType?
        "Filter the returned events to a single event type."

    example default
        limit=50
        category=groups


struct GetTeamEventsResult
    events List(TeamEvent)
        "List of events."
    cursor String
        "Pass the cursor into :route:`log/get_events/continue` to obtain additional events."
    has_more Boolean
        "Is true if there are additional events that have not been returned yet.
        An additional call to :route:`log/get_events/continue` can retrieve them."

#    example default
#        events = [TeamEvent]
#        cursor = "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
#        has_more = true

union GetTeamEventsError
    "Errors that can be raised when calling :route:`log/get_events`."

    user_not_found
        "No matching user found. The provided team_member_id, email, or external_id does not exist on this team."

route log/get_events(GetTeamEventsArg, GetTeamEventsResult, GetTeamEventsError)
    "Retrieves team events.

    Permission : Team Auditing."

    attrs
        auth = "team"
        owner = "adminx"

struct GetTeamEventsContinueArg
    cursor String
        "Indicates from what point to get the next set of members."

    example default
        cursor = "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"


union GetTeamEventsContinueError
    "Errors that can be raised when calling :route:`log/get_events/continue`."

    bad_cursor
        "Bad cursor."


route log/get_events/continue(GetTeamEventsContinueArg, GetTeamEventsResult, GetTeamEventsContinueError)
    "Once a cursor has been retrieved from :route:`log/get_events`, use this to paginate through all events.

    Permission : Team Auditing."

    attrs
        auth = "team"
